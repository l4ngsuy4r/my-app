{"version":3,"sources":["App/Editor/Editor.js","App/List/List.js","App/App.js","serviceWorker.js","index.js"],"names":["Editor","file","onFileUpdate","className","placeholder","type","value","title","onChange","event","target","body","List","itemList","itemMap","activeItemId","onItemClick","list","useMemo","sort","a","b","map","itemId","key","onClick","filesURL","headers","timeoutMap","App","useReducer","state","payload","fileList","fileMap","activeFileId","fileId","fileToCreate","_id","filter","undefined","fileToUpdate","oldValue","prevOldValue","pendingUpdateMap","pendingDeleteMap","dispatch","activeFile","useEffect","fetch","then","res","json","files","reduce","Date","now","method","JSON","stringify","clearTimeout","setTimeout","Boolean","window","location","hostname","match","ReactDOM","render","name","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.37868d31.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Editor.css\";\r\n\r\nconst Editor = ({ file, onFileUpdate }) => {\r\n  return file ? (\r\n    <div className=\"container\">\r\n      <input\r\n        placeholder=\"Title\"\r\n        type=\"text\"\r\n        value={file.title}\r\n        onChange={event => onFileUpdate({ ...file, title: event.target.value })}\r\n      />\r\n      <textarea\r\n        placeholder=\"Whats on your mind?\"\r\n        value={file.body}\r\n        onChange={event => onFileUpdate({ ...file, body: event.target.value })}\r\n      />\r\n    </div>\r\n  ) : (\r\n    <div>Select a file</div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React, { useMemo } from \"react\";\r\nimport \"./List.css\";\r\n\r\nconst List = ({ itemList, itemMap, activeItemId, onItemClick }) => {\r\n  const sortedList = useMemo(\r\n    () => itemList.sort((a, b) => (a > b ? -1 : a < b ? 1 : 0)),\r\n    [itemList]\r\n  );\r\n\r\n  const list = sortedList.map(itemId => (\r\n    <li\r\n      key={itemId}\r\n      onClick={() => onItemClick(itemId)}\r\n      className={itemId === activeItemId ? \"active\" : \"\"}\r\n    >\r\n      {itemMap[itemId] ? itemMap[itemId].title : \"\"}\r\n    </li>\r\n  ));\r\n\r\n  return <ul>{list}</ul>;\r\n};\r\n\r\nexport default List;\r\n","import React, { useEffect, useMemo } from \"react\";\nimport { useReducer } from \"reinspect\";\nimport Editor from \"./Editor/Editor\";\nimport List from \"./List/List\";\n\nconst filesURL = \"https://re-back.herokuapp.com/files\";\nconst headers = {\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\"\n};\n\nconst timeoutMap = {};\n\nconst App = () => {\n  const [state, dispatch] = useReducer(\n    (state, { type, payload }) => {\n      switch (type) {\n        case \"LOAD_SUCCESS\": {\n          const { fileList, fileMap } = payload;\n          return { ...state, fileList, fileMap };\n        }\n        case \"SET_ACTIVE\": {\n          const { fileId } = payload;\n          return { ...state, activeFileId: fileId };\n        }\n        case \"OPTIMISTIC_CREATE\": {\n          const { fileToCreate } = payload;\n          return {\n            ...state,\n            fileList: [fileToCreate._id, ...state.fileList],\n            fileMap: {\n              ...state.fileMap,\n              [fileToCreate._id]: fileToCreate\n            },\n            activeFileId: fileToCreate._id\n          };\n        }\n        case \"CREATE_FAIL\": {\n          const { fileId } = payload;\n          return {\n            ...state,\n            fileList: state.fileList.filter(_id => _id !== fileId),\n            fileMap: {\n              ...state.fileMap,\n              [fileId]: undefined\n            }\n          };\n        }\n        case \"OPTIMISTIC_UPDATE\": {\n          const { fileToUpdate, oldValue } = payload;\n          const prevOldValue = state.pendingUpdateMap[fileToUpdate._id];\n          return {\n            ...state,\n            fileMap: {\n              ...state.fileMap,\n              [fileToUpdate._id]: fileToUpdate\n            },\n            pendingUpdateMap: {\n              ...state.pendingUpdateMap,\n              [fileToUpdate._id]: prevOldValue ? prevOldValue : oldValue\n            }\n          };\n        }\n        case \"UPDATE_SUCCESS\": {\n          const { fileId } = payload;\n          return {\n            ...state,\n            pendingUpdateMap: {\n              ...state.pendingUpdateMap,\n              [fileId]: undefined\n            }\n          };\n        }\n        case \"UPDATE_FAIL\": {\n          const { fileId } = payload;\n          return {\n            ...state,\n            fileMap: {\n              ...state.fileMap,\n              [fileId]: state.pendingUpdateMap[fileId]\n            },\n            pendingUpdateMap: {\n              ...state.pendingUpdateMap,\n              [fileId]: undefined\n            }\n          };\n        }\n        case \"OPTIMISTIC_DELETE\": {\n          const { fileId, oldValue } = payload;\n          return {\n            ...state,\n            activeFileId:\n              state.activeFileId === fileId ? undefined : state.activeFileId,\n            fileList: state.fileList.filter(_id => _id !== fileId),\n            fileMap: {\n              ...state.fileMap,\n              [fileId]: undefined\n            },\n            pendingDeleteMap: {\n              ...state.pendingDeleteMap,\n              [fileId]: oldValue\n            }\n          };\n        }\n        case \"DELETE_FAIL\": {\n          const { fileId } = payload;\n          return {\n            ...state,\n            fileList: [...state.fileList, fileId],\n            fileMap: {\n              ...state.fileMap,\n              [fileId]: state.pendingDeleteMap[fileId]\n            },\n            pendingDeleteMap: {\n              ...state.pendingDeleteMap,\n              [fileId]: undefined\n            }\n          };\n        }\n        default:\n          return state;\n      }\n    },\n    {\n      fileList: [],\n      fileMap: {},\n      pendingUpdateMap: {},\n      pendingDeleteMap: {}\n    },\n    \"APP\"\n  );\n\n  const activeFile = useMemo(() => state.fileMap[state.activeFileId], [\n    state.fileMap,\n    state.activeFileId\n  ]);\n\n  useMemo(() => {\n    if (!state.activeFileId) {\n      const fileId = state.fileList.sort((a, b) =>\n        a > b ? -1 : a < b ? 1 : 0\n      )[0];\n      dispatch({ type: \"SET_ACTIVE\", payload: { fileId } });\n    }\n  }, [state.activeFileId, state.fileList]);\n\n  useEffect(() => {\n    fetch(filesURL)\n      .then(res => res.json())\n      .then(files =>\n        dispatch({\n          type: \"LOAD_SUCCESS\",\n          payload: {\n            fileList: files.map(file => file._id),\n            fileMap: files.reduce((map, file) => {\n              map[file._id] = file;\n              return map;\n            }, {})\n          }\n        })\n      );\n  }, []);\n\n  const setActiveFileId = fileId =>\n    dispatch({ type: \"SET_ACTIVE\", payload: { fileId } });\n\n  const createFile = () => {\n    const fileId = Date.now();\n    const fileToCreate = { _id: fileId, title: \"\", body: \"\" };\n    dispatch({\n      type: \"OPTIMISTIC_CREATE\",\n      payload: { fileToCreate }\n    });\n    fetch(filesURL, {\n      method: \"POST\",\n      body: JSON.stringify(fileToCreate),\n      headers\n    })\n      .then(res => res.json())\n      .then(\n        () => {},\n        () =>\n          dispatch({\n            type: \"CREATE_FAIL\",\n            payload: { fileId }\n          })\n      );\n  };\n\n  const updateFile = fileToUpdate => {\n    if (timeoutMap[fileToUpdate._id])\n      clearTimeout(timeoutMap[fileToUpdate._id]);\n    dispatch({\n      type: \"OPTIMISTIC_UPDATE\",\n      payload: {\n        fileToUpdate,\n        oldValue: { ...state.fileMap[fileToUpdate._id] }\n      }\n    });\n    timeoutMap[fileToUpdate._id] = setTimeout(() => {\n      fetch(filesURL, {\n        method: \"PUT\",\n        body: JSON.stringify(fileToUpdate),\n        headers\n      }).then(\n        () =>\n          dispatch({\n            type: \"UPDATE_SUCCESS\",\n            payload: { fileId: fileToUpdate._id }\n          }),\n        () =>\n          dispatch({\n            type: \"UPDATE_FAIL\",\n            payload: { fileId: fileToUpdate._id }\n          })\n      );\n    }, 2000);\n  };\n\n  const deleteFile = () => {\n    const fileId = state.activeFileId;\n    const oldValue = { ...state.fileMap[fileId] };\n    dispatch({\n      type: \"OPTIMISTIC_DELETE\",\n      payload: { fileId, oldValue }\n    });\n    fetch(filesURL, {\n      method: \"DELETE\",\n      body: JSON.stringify({ _id: fileId }),\n      headers\n    }).then(\n      () =>\n        dispatch({\n          type: \"DELETE_SUCCESS\",\n          payload: { fileId }\n        }),\n      () =>\n        dispatch({\n          type: \"DELETE_FAIL\",\n          payload: { fileId }\n        })\n    );\n  };\n\n  return (\n    <>\n      <button onClick={createFile}>Create</button>\n      <button onClick={deleteFile}>Delete</button>\n      {/* <span>{synced ? \" synced\" : \" not synced\"}</span> */}\n      <List\n        itemList={state.fileList}\n        itemMap={state.fileMap}\n        activeItemId={state.activeFileId}\n        onItemClick={setActiveFileId}\n      />\n      <Editor file={activeFile} onFileUpdate={updateFile} />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { StateInspector } from \"reinspect\";\n\nReactDOM.render(\n  <StateInspector name=\"App\">\n    <App />\n  </StateInspector>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}